name: Build and deploy Laravel app to Azure Web App - JTIntern

on:
  push:
    branches:
      - master   # ganti ke 'main' jika default branch kamu main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      AZURE_WEBAPP_NAME: JTIntern
      AZURE_WEBAPP_SLOT: Production
      PHP_VERSION: "8.2"
      NODE_VERSION: "20"
      COMPOSER_ALLOW_SUPERUSER: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # OPTIONAL: Ekstrak release zip jika kamu upload artifact bernama release.zip
      - name: Extract and prepare release
        run: |
          if [ -f release.zip ]; then
            echo "Extracting release.zip..."
            unzip -oq release.zip || unzip -o release.zip
          else
            echo "No release.zip found, skipping extraction"
          fi

      # ===================== Laravel (PHP) build di CI =====================
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, intl, pdo_mysql
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

      - name: Cache Composer deps
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      - name: Install Composer dependencies (prod)
        run: |
          composer install --no-dev --prefer-dist --no-progress --no-interaction --optimize-autoloader
        # JANGAN jalankan artisan config:cache di sini, karena APP_KEY/ENV berasal dari App Service

      # ===================== Frontend (opsional) =====================
      - name: Detect frontend
        id: has-node
        run: |
          if [ -f package.json ]; then
            echo "HAS_NODE=true" >> $GITHUB_OUTPUT
          else
            echo "HAS_NODE=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        if: steps.has-node.outputs.HAS_NODE == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install & build frontend
        if: steps.has-node.outputs.HAS_NODE == 'true'
        run: |
          npm ci
          # Hindari 'npm audit fix --force' karena bisa mengubah lockfile tanpa review
          npm run build

      # ===================== Deploy =====================
      - name: Deploy to Azure Web App (Publish Profile)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: ${{ env.AZURE_WEBAPP_SLOT }}
          publish-profile: ${{ secrets.AzureAppService_PublishProfile }}
          package: .
